version: '3.8'

services:
  server:
    image: twentycrm/twenty:latest
    volumes:
      - server-local-data:/app/packages/twenty-server/.local-storage
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      NODE_PORT: 3000
      PG_DATABASE_URL: postgres://${PG_DATABASE_USER:-postgres}:${PG_DATABASE_PASSWORD:-postgres}@${PG_DATABASE_HOST:-db}:${PG_DATABASE_PORT:-5432}/default
      SERVER_URL: ${SERVER_URL:-http://localhost:3000}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      
      # Storage configuration
      STORAGE_TYPE: ${STORAGE_TYPE:-local}
      STORAGE_S3_REGION: ${STORAGE_S3_REGION}
      STORAGE_S3_NAME: ${STORAGE_S3_NAME}
      STORAGE_S3_ENDPOINT: ${STORAGE_S3_ENDPOINT}
      
      # Security
      APP_SECRET: ${APP_SECRET:-replace_me_with_a_random_string_at_least_32_chars}
      
      # Google OAuth (optional)
      AUTH_GOOGLE_ENABLED: ${AUTH_GOOGLE_ENABLED:-false}
      AUTH_GOOGLE_CLIENT_ID: ${AUTH_GOOGLE_CLIENT_ID}
      AUTH_GOOGLE_CLIENT_SECRET: ${AUTH_GOOGLE_CLIENT_SECRET}
      AUTH_GOOGLE_CALLBACK_URL: ${AUTH_GOOGLE_CALLBACK_URL}
      
      # Email configuration (optional)
      EMAIL_FROM_ADDRESS: ${EMAIL_FROM_ADDRESS:-noreply@crm.4ow4.com}
      EMAIL_FROM_NAME: ${EMAIL_FROM_NAME:-"ProPods CRM"}
      EMAIL_SYSTEM_ADDRESS: ${EMAIL_SYSTEM_ADDRESS:-system@crm.4ow4.com}
      EMAIL_DRIVER: ${EMAIL_DRIVER:-logger}
      EMAIL_SMTP_HOST: ${EMAIL_SMTP_HOST}
      EMAIL_SMTP_PORT: ${EMAIL_SMTP_PORT}
      EMAIL_SMTP_USER: ${EMAIL_SMTP_USER}
      EMAIL_SMTP_PASSWORD: ${EMAIL_SMTP_PASSWORD}
      
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: curl --fail http://localhost:3000/healthz || exit 1
      interval: 5s
      timeout: 5s
      retries: 20
    restart: unless-stopped

  worker:
    image: twentycrm/twenty:latest
    volumes:
      - server-local-data:/app/packages/twenty-server/.local-storage
    command: ["yarn", "worker:prod"]
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PG_DATABASE_URL: postgres://${PG_DATABASE_USER:-postgres}:${PG_DATABASE_PASSWORD:-postgres}@${PG_DATABASE_HOST:-db}:${PG_DATABASE_PORT:-5432}/default
      SERVER_URL: ${SERVER_URL:-http://localhost:3000}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      DISABLE_DB_MIGRATIONS: "true"
      
      # Storage configuration
      STORAGE_TYPE: ${STORAGE_TYPE:-local}
      STORAGE_S3_REGION: ${STORAGE_S3_REGION}
      STORAGE_S3_NAME: ${STORAGE_S3_NAME}
      STORAGE_S3_ENDPOINT: ${STORAGE_S3_ENDPOINT}
      
      # Security
      APP_SECRET: ${APP_SECRET:-replace_me_with_a_random_string_at_least_32_chars}
      
      # Email configuration
      EMAIL_FROM_ADDRESS: ${EMAIL_FROM_ADDRESS:-noreply@crm.4ow4.com}
      EMAIL_FROM_NAME: ${EMAIL_FROM_NAME:-"ProPods CRM"}
      EMAIL_SYSTEM_ADDRESS: ${EMAIL_SYSTEM_ADDRESS:-system@crm.4ow4.com}
      EMAIL_DRIVER: ${EMAIL_DRIVER:-logger}
      EMAIL_SMTP_HOST: ${EMAIL_SMTP_HOST}
      EMAIL_SMTP_PORT: ${EMAIL_SMTP_PORT}
      EMAIL_SMTP_USER: ${EMAIL_SMTP_USER}
      EMAIL_SMTP_PASSWORD: ${EMAIL_SMTP_PASSWORD}
      
    depends_on:
      db:
        condition: service_healthy
      server:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${PG_DATABASE_USER:-postgres}
      POSTGRES_PASSWORD: ${PG_DATABASE_PASSWORD:-postgres}
      POSTGRES_DB: default
    healthcheck:
      test: pg_isready -U ${PG_DATABASE_USER:-postgres} -h localhost -d postgres
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--maxmemory-policy", "noeviction"]
    volumes:
      - redis-data:/data
    restart: unless-stopped

volumes:
  db-data:
  redis-data:
  server-local-data: